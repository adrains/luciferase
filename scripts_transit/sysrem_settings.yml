# This file contains the common set of parameters for running SYSREM.
#
# YAML specifications: https://yaml.org/spec/1.2.2/
#
#------------------------------------------------------------------------------
# Data Settings
#------------------------------------------------------------------------------
# Which data cube to load. Just specify the fn_label component, and the path is
# constructed as: <save_path>/transit_data_<label>_n<n_transits>.fits
save_path: "simulations"
n_transit: 2

# Real data
# ---------
label: "wasp107_np_corr"

# SNR~130 sim with all species + slit losses
# -------------------------------------------
#label: "simulated_R100000_wasp107_240802_C2H2_CH4_CO_CO2_H2O_H2S_HCN_NH3_PH3_SiO_stellar_1_telluric_1_planet_1_boost_1_slit_loss_1_SNR_130"

# SNR~300 sim with all species + slit losses
# -------------------------------------------
#label: "simulated_R100000_wasp107_240802_C2H2_CH4_CO_CO2_H2O_H2S_HCN_NH3_PH3_SiO_stellar_1_telluric_1_planet_1_boost_1_slit_loss_1_SNR_300"

# Nightly velocity offsets in km/s. This array should have the same length as
# the number of transits and is used to account for observed RV offsets between 
# nights (which is to say that this is not a relevant setting for simulations).
# A positive velocity shifts the Kp-Vsys diagram to the right, and negative
# to the left.
nightly_rv_offsets: [0, 0]

#------------------------------------------------------------------------------
# Template Settings
#------------------------------------------------------------------------------
# Molecfit transmission spectra--one for each night
molecfit_fits:
- "data_reduction/WASP107/220310_WASP107/molecfit_results/MODEL/BEST_FIT_MODEL.fits"
#- "data_reduction/WASP107/230222_WASP107/molecfit_results/BEST_FIT_MODEL.fits"
- "data_reduction/wasp_107_n2/BEST_FIT_MODEL.fits"
# HACK--note that I need to run the second night through molecfit again

# Fill value for missing telluric tau values
tau_fill_value: 0

# Grid of petitRADTRANS planet spectra, units of R_jup as a function of lambda
planet_fits: "templates/WASP107b_Dyrek_pRT-Ret_templates_all_R100000.fits"
#planet_fits: "templates/WASP107b_Welbanks_Aur-Ret_templates_all_R100000.fits"

# The cross-correlation template will have the following species (and an
# exception will be raised if this isn't the case)
# Species: H2O, H2S, NH3, CO, PH3, SiO, CH4, CO2, C2H2, HCN
species_to_cc: ["H2O"]

# Continuum normalised stellar spectrum
stellar_template_fits: "data_reduction/WASP107/template_wasp_107.fits"

#------------------------------------------------------------------------------
# Data Preparation Settings
#------------------------------------------------------------------------------
# Sigma thresholds for sigma clipping
sigma_threshold_phase: 5.0
sigma_threshold_spectral: 5.0

# Used to select how the data is normalised prior to running SYSREM:
#   True: data is continuum normalised to the 'true' continuum value using 
#         a molecfit telluric model, MARCS spectrum, and airmasses.
#   False: each spectral segment is simply normalised by its median flux
do_use_continuum_normalised_data: False

# Threshold value for what we consider strong telluric absorption. This value
# is the *lowest* level we allow a telluric line to absorb to in a continuum
# normalised spectrum. That is, a value of 0.2 means 80% telluric absorption is
# our limit, and any lines deeper than this are masked. Note that there are two
# main motiviations for masking:
# 1) Masking out pixels that are saturated (0% transmitted flux) *before* the
#    instrumental broadening, that is to say masking pixels with no 
#    astrophysical information content.
# 2) Masking out low SNR pixels.
telluric_trans_bad_px_threshold: 0.25

# Whether to apply a wavelength dependent continuum normalisation to our
# spectra. This can either be 'AB' whereby we transform B spectra to have the
# continuum of A spectra, or 'per_phase' where we assume that there is a *time
# varying* continuum and correct each phase to a reference spectrum. Setting to
# any other value will run with only a median normalisation.
continuum_correction_kind: "per_phase"

# Spectral resolution to smooth the continuum normalisation to
continuum_corr_smoothing_resolution: 1000

#------------------------------------------------------------------------------
# SYSREM Settings
#------------------------------------------------------------------------------
# Number of iterations to run SYSREM for
n_sysrem_iter: 10

# Convergence threshold for each SYSREM iteration
sysrem_convergence_tol: 1.0E-6

# Maximum number of iterations to run while converging SYSREM
sysrem_max_convergence_iter: 100

# Function used to assess convergence: ['mean', 'median', 'min', 'max']
sysrem_diff_method: "max"

# Whether to run SYSREM on all spectral segments at once, or segment-by-segment
run_sysrem_order_by_order: True

# Which detrending algorithm to use, currently either [SYSREM, PISKUNOV]
detrending_algorithm: "SYSREM"

# Sigma clipping threshold for 'PISKUNOV' detrending method
sigma_threshold_sysrem_piskunov: 3.0

# Whether to split A and B frames into two separate sequences. If True, SYSREM
# will be run 2x per night (with each set of residuals having their own fits
# HDU). This then results in two sets of cross-correlations per night.
split_AB_sequences: False

# Whether to mask out strong tellurics when running SYSREM. See
# telluric_trans_bad_px_threshold for more details on how this works.
do_mask_strong_tellurics_in_sysrem: True

# Whether to run SYSREM in the telluric frame (False, default) or the stellar
# frame (True). Note that changing this setting will require re-running SYSREM.
run_sysrem_in_stellar_frame: False

#------------------------------------------------------------------------------
# Cross Correlation Settings
#------------------------------------------------------------------------------
# Whether to normalise the residuals by their standard deviation in phase. This
# has the effect of downweighting time-variable pixels--i.e. those associated
# with telluric lines that change throughout the night. 
normalise_resid_by_per_phase_std: True

# Set to true if we want to test things by cross-correlating with a telluric
# template spectrum rather than one from a planet
cc_with_telluric: False

# Set to true if we want to test things by cross-correlating with a stellar
# template spectrum rather than one from a planet
cc_with_stellar: False

# Orders to analyse. If this is true, we only cross-correlate and compute
# Kp-Vsys maps for the spectral segments whose indices are listed in below in
# selected_segments. This is useful for for excluding orders which do not
# meaningfully contribute to the CC, e.g. for CO which only has absorption
# features in 6/18 segments of the CRIRES K2148 grating.
do_mask_orders_for_analysis: False
selected_segments: [12,13,14,15,16,17]

# Step size for the cross-correlation in km/s. Finer sampling might give a
# higher detection SNR depending on where the best fitting velocity sits, but
# values below the pixel velocity resolution of the instrument will be 
# correlated so this shouldm't be a huge improvement. For CRIRES+ not 
# recommended to sample < 0.5 km/s. 
cc_rv_step: 1

# Minimum and maximum extents of the cross correlation in km/s. Note that this
# range should be larger than the actual central range you expect the planet to
# realistically inhabit as edge effects will be introduced at the edges of the
# Kp-Vsys plot, which then can just be clipped off when plotting.
cc_rv_lims: [-120,120]

#------------------------------------------------------------------------------
# Kp-Vsys Settings
#------------------------------------------------------------------------------
# Step size for the Kp-Vsys map in km/s. Same caveats as for cc_rv_step above.
Kp_step: 1

# Minimum and maximum extents of the Kp-Vsys map in km/s
Kp_lims: [0,250]

# This is the RV range of the x axis for our Kp-Vsys plots. This should be a
# smaller range than cc_rv_lims, as the idea is we CC wider than we need, then
# clip off the edges to a) remove edge effects, and b) focus on the region the
# planet is actually in.
kp_vsys_x_range: [-40,40]

# We exclude RVs within these bounds when computing the noise for our Kp-Vsys
# maps. This range should be set to exclude the points around Vsys = 0, and
# should be sufficiently smaller than kp_vsys_x_range to allow a reasonable
# region from which to compute noise statistics for.
kp_vsys_snr_rv_exclude: [-15, 15]