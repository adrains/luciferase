# This file contains the common set of parameters simulate exoplanet
# atmosphere transit observations.
#
# YAML specifications: https://yaml.org/spec/1.2.2/
#
#------------------------------------------------------------------------------
# Model Settings
#------------------------------------------------------------------------------
# Save path
save_path: ""
star_name: "wasp107"
label: "simulated_R100000_wasp107"

n_transit: 2

# For simulating a transit we currently just swap out the fluxes from an
# actually observed data cube created by prepare_transit_model.fits
fits_load_dir: "transit_data_wasp107.fits"

# Model stellar spectrum
marcs_fits: "synth/marcs_wasp107_4420g4.61z+0.00m0.683t0.plt"
#marcs_fits: "synth/template_wasp107_230623.fits"

# Model planet spectrum
planet_wave_fits: "data/W107b_spec_H2O_main_iso_CO_all_iso_clear_wave_R200000.fits"
planet_spec_fits: "data/W107b_spec_H2O_main_iso_CO_all_iso_clear_flux_R200000.fits"

# Molecfit modelled telluric spectra--one per night to be simulated
molecfit_fits:
- "data_reduction/WASP107/220310_WASP107/molecfit_results/MODEL/BEST_FIT_MODEL.fits"
- "data_reduction/WASP107/230222_WASP107/molecfit_results/BEST_FIT_MODEL.fits"

# CRIRES+ throughput data from the ETC
throughput_json_path: "data/crires_etc_throughput_K2148.json"

# Wavelength limits and spectroscopic resolution
wl_min: 19000
wl_max: 25000
instr_resolving_power: 100000

# VLT UT M1 mirror and central obstruction radius
# https://www.eso.org/sci/facilities/paranal/telescopes/ut/m1unit.html
r_tel_prim: 4.1       # 8.2 / 2
r_tel_cen_ob: 0.5     # 1 / 2

do_equid_lambda_resample: True

# Fill value for missing values of CRIRES throughput
fill_throughput_value: 1

# Fill value for missing telluric tau values
tau_fill_value: 0

# Whether to correct for the blaze/grating efficiency/throughput term
correct_for_blaze: True

# These three parameters determine how we simulate our scale vector which
# represents slit losses. To set this to unity, set scale_vector_method to 
# 'constant_unity'. Alternatively, set it to 'smoothed_random' where we
# generate n_phase random points between 0 and 2, and use a Savitzkyâ€“Golay to
# smooth this using a window size of savgol_window_frac_size * n_phase and a
# polynomial order of savgol_poly_order.
scale_vector_method: "smoothed_random"
savgol_window_frac_size: 0.5
savgol_poly_order: 3

# -----------------------------------------------------------------------------
# Test/troubleshooting settings
# -----------------------------------------------------------------------------
# Set these to true to disable the respective component in the modelling
do_use_uniform_stellar_spec: False
do_use_uniform_telluric_spec: False
do_use_uniform_planet_spec: False

# Set this to values > 1 to increase the planetary absorption
planet_transmission_boost_fac: 10

# Target SNR for the brightest order before correcting for the blaze. Used to
# rescale spectra and affects applied noise. Set to None to not add noise and
# have 'infinite' SNR.
target_snr: "None"