# This file contains the common set of parameters simulate exoplanet
# atmosphere transit observations.
#
# YAML specifications: https://yaml.org/spec/1.2.2/
#
#------------------------------------------------------------------------------
# Model Overview
#------------------------------------------------------------------------------
# Settings for how to save our simulated datacube. The path is constructed as:
#   <save_path>/transit_data_<label>_<sim_info>_n<n_transits>.fits
# where <sim_info> is:
#   stellar_<1/0>_telluric_<1/0>_planet_<1/0>_boost_<N>_slit_loss_<1/0>
#   _vsys_offset_<N>_SNR_<N>
# where each boolean, or number corresponds to the values set below.
save_path: "simulations"
star_name: "wasp107"
label: "simulated_R100000_wasp107_W24"

# Number of transits to simulate, which *must* correspond to the number of
# transits of real data in the base fits file of observed data.
n_transit: 2

# For simulating a transit we currently just swap out the fluxes from an
# pre-existing datacube made by scripts_transit/prepare_transit_model_fits.py
base_fits_path: "simulations"
base_fits_label: "wasp107"

# If True, we can also simulate transits that we didn't observe  by using 
# scripts_transit/make_fake_transit_headers.py to generate the equivalent
# header + timestep info that is associated with the observed transits. These
# are stored in CSV format, and should be listed below. If True, any
# uncommented CSVs are used during the simulation, and this number should
# correspond to the number of fits files listed under molecfit_fits below.
do_simulate_unobserved_transits: False
unobserved_transit_dataframes:
- "simulations/simulated_transit_df/transit_info_df_WASP-107_2022-04-03.csv"
- "simulations/simulated_transit_df/transit_info_df_WASP-107_2022-06-27.csv"
- "simulations/simulated_transit_df/transit_info_df_WASP-107_2023-03-18.csv"
- "simulations/simulated_transit_df/transit_info_df_WASP-107_2023-05-20.csv"
- "simulations/simulated_transit_df/transit_info_df_WASP-107_2024-02-07.csv"
- "simulations/simulated_transit_df/transit_info_df_WASP-107_2024-05-03.csv"
- "simulations/simulated_transit_df/transit_info_df_WASP-107_2024-05-26.csv"

# If this is true, then we reimport the syst_info data frame + update all the
# previously computed values (e.g. positions, velocities) at each time step.
# This is useful for quickly modifying aspects of the planet's orbit in a way
# that is inconsistent with the literature values of the planet, obviating the
# need to re-run scripts_transit/prepare_transit_model_fits.py.
do_update_syst_info: False

# Properties CSV with star, planet, and system info. Only applicable if 
# do_update_syst_info is set to True.
planet_properties_file: "scripts_transit/planet_data_wasp107.csv"

# Whether to take stellar rotation into account when computing the Doppler
# shift beta, otherwise gamma = beta. Only applicable if do_update_syst_info is
# set to True.
do_consider_vsini: False

#------------------------------------------------------------------------------
# Templates
#------------------------------------------------------------------------------
# Model stellar spectrum--this should *not* be continuum normalised.
#marcs_fits: "synth/template_wasp107_230623.fits"                     # non-mu sampled
marcs_fits: "templates/WASP107_MARCS_4420g4.61z+0.00m0.683mu49.fits"  # mu sampled

# Model planet spectrum fits file containing planet Rp (R_jup) vs lambda (um).
# This file is made by: scripts_transit/make_planet_transmission_grid_fits.py
#planet_fits: "templates/WASP107b_Dyrek_pRT-Ret_templates_all_R100000.fits"
planet_fits: "templates/WASP107b_Welbanks_CHI-Ret_templates_all_R100000.fits"

# Select the molecular species to be modelled. The species selected must have
# a combined spectrum available in planet_fits, see the HDU labelled
# "TEMPLATE_INFO" for more information.

# Welbanks+24 Species
species_to_model: ["H2O", "CH4", "NH3", "CO", "CO2", "SO2", "H2S"]

# Dyrek+24 Species
#species_to_model: ["H2O", "H2S", "NH3", "CO", "PH3", "SiO", "CH4", "CO2", "C2H2", "HCN"]

# Molecfit modelled telluric spectra--one per night to be simulated
molecfit_fits:
- "data_reduction/WASP107/220310_WASP107/molecfit_results/MODEL/BEST_FIT_MODEL.fits"
- "data_reduction/wasp_107_n2/BEST_FIT_MODEL.fits"
- "templates/molecfit_AL/molecfit_BFM_A_220311_GJ1214.fits"
- "templates/molecfit_AL/molecfit_BFM_A_220330_GJ1214.fits"
- "templates/molecfit_AL/molecfit_BFM_A_220703_GJ1214.fits"
- "templates/molecfit_AL/molecfit_BFM_A_220810_GJ1214.fits"
- "templates/molecfit_AL/molecfit_BFM_A_230622_GJ1214.fits"
- "templates/molecfit_AL/molecfit_BFM_A_230810_GJ1214.fits"
- "templates/molecfit_AL/molecfit_BFM_A_240806_GJ1214.fits"
#- "templates/molecfit_AL/molecfit_BFM_A_220311_GJ1214.fits"

#------------------------------------------------------------------------------
# Model specifics
#------------------------------------------------------------------------------
# CRIRES+ throughput data from the ETC
throughput_json_path: "data/crires_etc_throughput_K2148.json"

# Wavelength limits and spectroscopic resolution
wl_min: 19000
wl_max: 25000
instr_resolving_power: 100000

# VLT UT M1 mirror and central obstruction radius
# https://www.eso.org/sci/facilities/paranal/telescopes/ut/m1unit.html
r_tel_prim: 4.1       # 8.2 / 2
r_tel_cen_ob: 0.5     # 1 / 2

do_equid_lambda_resample: True

# Fill value for missing values of CRIRES throughput
fill_throughput_value: 1

# Fill value for missing telluric tau values
tau_fill_value: 0

# Whether to correct for the blaze/grating efficiency/throughput term
correct_for_blaze: True

# These three parameters determine how we simulate our scale vector which
# represents slit losses. To set this to unity, set scale_vector_method to 
# 'constant_unity'. Alternatively, set it to 'smoothed_random' where we
# generate n_phase random points between 0 and 2, and use a Savitzkyâ€“Golay to
# smooth this using a window size of savgol_window_frac_size * n_phase and a
# polynomial order of savgol_poly_order.
scale_vector_method: "smoothed_random"
savgol_window_frac_size: 0.5
savgol_poly_order: 3

# Vsys offset, used for testing and comparing simulations to injection tests.
# If zero the system is simulated with the observed Vsys RV value. If set to a
# non-zero value we instead add an offset to Vsys when simulating.
vsys_offset: 0 # km/s

# -----------------------------------------------------------------------------
# Continuum normalisation
# -----------------------------------------------------------------------------
# Value before which we consider the pixel sufficiently affected by telluric
# absorption to mask it when continuum normalising.
telluric_trans_bad_px_threshold: 0.5

# Note that this stellar template is *different* than the one above since this
# one is already continuum normalised and used for masking.
stellar_template_fits: "data_reduction/WASP107/template_wasp_107.fits"

# -----------------------------------------------------------------------------
# Test/troubleshooting settings
# -----------------------------------------------------------------------------
# Set these to true to disable the respective component in the modelling
do_use_uniform_stellar_spec: False
do_use_uniform_telluric_spec: False
do_use_uniform_planet_spec: False

# Set this to values > 1 to increase the planetary absorption. This value will
# be *directly* multiplied the wavelength-dependent planet radius vector, so
# keep in mind Rp/R* for what reasonable boost values are. As an example, if
# Rp/R* is 0.1 (i.e. the planet has 10% the radius of the star), a boost value
# of 10x will make the planet the *same size* as the star, at which point the
# simulation will break down. Thus, aim to use boost values of a ~few.
planet_transmission_boost_fac: 1

# Target SNR for the brightest order before correcting for the blaze. Used to
# rescale spectra and affects applied noise. Set to None to not add noise and
# have 'infinite' SNR.
target_snr: 130